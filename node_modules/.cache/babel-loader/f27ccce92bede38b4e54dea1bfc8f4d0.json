{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\owner\\\\OneDrive\\\\Dokumen\\\\GitHub\\\\sikat-design\\\\src\\\\component\\\\chart.jsx\";\nimport React from \"react\";\nimport \"./style/index.scss\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Line from \"react-chartjs-2\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport './js/isi.js';\nconst state = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\"],\n  datasets: [{\n    label: \"Rainfall\",\n    fill: false,\n    lineTension: 1,\n    backgroundColor: \"rgba(75,192,192,1)\",\n    borderColor: \"rgba(0,0,0,1)\",\n    borderWidth: 0.5,\n    data: [65, 59, 80, 81, 56]\n  }]\n};\n\nfunction LinkInto({\n  label,\n  to,\n  activeOnlyWhenExact\n}) {\n  let match = useRouteMatch({\n    path: to,\n    exact: activeOnlyWhenExact\n  });\n  return /*#__PURE__*/React.createElement(Link, {\n    className: match ? \"aktif\" : \"\",\n    to: to,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, label);\n}\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"col-md-10 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"judul\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"Grafik Rekapitulasi Bencana\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(LinkInto, {\n      label: \"1 Minggu\",\n      to: \"/\",\n      activeOnlyWhenExact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(LinkInto, {\n      label: \"1 Bulan\",\n      to: \"/\",\n      activeOnlyWhenExact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(LinkInto, {\n      label: \"6 Bulan\",\n      to: \"/\",\n      activeOnlyWhenExact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(LinkInto, {\n      label: \"1 Tahun\",\n      to: \"/\",\n      activeOnlyWhenExact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Line, {\n      data: state,\n      options: {\n        title: {\n          display: false,\n          text: \"Average Rainfall per month\",\n          fontSize: 20\n        },\n        legend: {\n          display: false,\n          position: \"right\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["C:/Users/owner/OneDrive/Dokumen/GitHub/sikat-design/src/component/chart.jsx"],"names":["React","Container","Row","Col","Line","Link","useRouteMatch","state","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","data","LinkInto","to","activeOnlyWhenExact","match","path","exact","Chart","Component","constructor","props","render","title","display","text","fontSize","legend","position"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./style/index.scss\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Line from \"react-chartjs-2\";\r\nimport {Link,useRouteMatch} from \"react-router-dom\";\r\nimport './js/isi.js'\r\n\r\nconst state = {\r\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\"],\r\n  datasets: [\r\n    {\r\n      label: \"Rainfall\",\r\n      fill: false,\r\n      lineTension: 1,\r\n      backgroundColor: \"rgba(75,192,192,1)\",\r\n      borderColor: \"rgba(0,0,0,1)\",\r\n      borderWidth: 0.5,\r\n      data: [65, 59, 80, 81, 56],\r\n    },\r\n  ],\r\n};\r\nfunction LinkInto({ label, to, activeOnlyWhenExact }) {\r\n  let match = useRouteMatch({\r\n    path: to,\r\n    exact: activeOnlyWhenExact,\r\n  });\r\n  return (\r\n      <Link className={match ? \"aktif\" : \"\"} to={to}>\r\n        {label}\r\n      </Link>\r\n  );\r\n}\r\n\r\nclass Chart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n        }\r\n  \r\n  render() {\r\n    return (\r\n      <Container className=\"container-fluid\">\r\n        <Row className=\"chart\">\r\n          <Col className=\"col-md-10 \">\r\n            <div className=\"judul\">Grafik Rekapitulasi Bencana</div>\r\n            <div className=\"select\">\r\n              <LinkInto label=\"1 Minggu\" to=\"/\" activeOnlyWhenExact={true} />\r\n              <LinkInto label=\"1 Bulan\" to=\"/\" activeOnlyWhenExact={true} />\r\n              <LinkInto label=\"6 Bulan\" to=\"/\" activeOnlyWhenExact={true} />\r\n              <LinkInto label=\"1 Tahun\" to=\"/\" activeOnlyWhenExact={true} />\r\n            </div>\r\n            <Line\r\n              data={state}\r\n              options={{\r\n                title: {\r\n                  display: false,\r\n                  text: \"Average Rainfall per month\",\r\n                  fontSize: 20,\r\n                },\r\n                legend: {\r\n                  display: false,\r\n                  position: \"right\",\r\n                },\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}