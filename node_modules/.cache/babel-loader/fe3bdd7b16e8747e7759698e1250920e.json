{"ast":null,"code":"var _jsxFileName = \"/home/derry/github/sikat-design/src/component/tabel.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport icoEdit from \"./img/icon/IcoEdit.svg\";\nimport icoDelete from \"./img/icon/IcoDelete.svg\";\nimport icoSearch from \"./img/icon/IcoSearch.svg\";\nimport { Link, useParams, withRouter } from \"react-router-dom\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport axios from \"axios\"; // import { data } from \"jquery\";\n\nexport default class Tabel extends React.Component {\n  constructor(props) {\n    super(props); //since we are extending class Table so we have to use super in order to override Component class constructor\n\n    this.state = {\n      students: [{\n        id: 1,\n        name: 'Wasif',\n        age: 21,\n        email: 'wasif@email.com'\n      }, {\n        id: 2,\n        name: 'Ali',\n        age: 19,\n        email: 'ali@email.com'\n      }, {\n        id: 3,\n        name: 'Saad',\n        age: 16,\n        email: 'saad@email.com'\n      }, {\n        id: 4,\n        name: 'Asad',\n        age: 25,\n        email: 'asad@email.com'\n      }],\n      items: []\n    };\n  }\n\n  componentWillMount() {\n    this.getList();\n  }\n\n  async getList() {\n    try {\n      const url = \"https://jsonplaceholder.typicode.com/todos\";\n      const response = await axios.get(url);\n      this.setState({\n        items: response.data\n      }, () => {\n        console.log(this.state.items);\n      });\n    } catch (err) {\n      alert(err);\n      console.log(\"Error In :\", err);\n    }\n  }\n\n  renderTableData() {\n    return this.state.students.map((student, index) => {\n      const {\n        id,\n        name,\n        age,\n        email\n      } = student; //destructuring\n\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 12\n        }\n      }, id), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 12\n        }\n      }, name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 12\n        }\n      }, age), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 12\n        }\n      }, email));\n    });\n  }\n\n  renderTableHeader() {\n    let header = Object.keys(this.state.students[0]);\n    return header.map((key, index) => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, key.toUpperCase());\n    });\n  }\n\n  render() {\n    //Whenever our class runs, render method will be called automatically, it may have already defined in the constructor behind the scene.\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 8\n      }\n    }, \"React Dynamic Table\"), /*#__PURE__*/React.createElement(\"table\", {\n      id: \"students\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 14\n      }\n    }, this.renderTableHeader()), this.renderTableData())));\n  }\n\n}\n\nfunction Halaman() {\n  let id = useParams();\n  return id;\n} //   <Link to=\"/EditDataLogistik\">\n//   <a href=\"#\" className=\"btn btn-warning edit\">\n//     <img src={icoEdit} alt=\"edit\" className=\"icoOption\" />\n//   </a>\n// </Link>\n// <a href=\"#\" className=\"btn btn-danger delete\">\n//   <img src={icoDelete} alt=\"delete\" className=\"icoOption\" />\n// </a>\n//constructor(props) {\n//     super(props)\n//     this.state = {\n//       items: [],\n//       students: [\n//         { id: 1, name: 'Wasif', age: 21, email: 'wasif@email.com' },\n//         { id: 2, name: 'Ali', age: 19, email: 'ali@email.com' },\n//         { id: 3, name: 'Saad', age: 16, email: 'saad@email.com' },\n//         { id: 4, name: 'Asad', age: 25, email: 'asad@email.com' }\n//      ],\n//     };\n//   }\n//   componentWillMount() {\n//     this.getList();\n//   }\n//    async getList() {\n//     try{\n//     const url = \"https://jsonplaceholder.typicode.com/todos\";\n//     const response = await axios.get(url);\n//     this.setState(   {\n//       items: response.data,\n//     },\n//     () => {\n//       console.log(this.state.items);\n//     }\n//   );\n//   }catch(err){\n//     alert(err);\n//     console.log (\"Error In :\",err);\n//   }\n// }\n// async renderTableHeader() {\n//   const { items,students } = this.state;\n//    try{\n//     let header = Object.keys(students[0])\n//     return header.map((key, index) => {\n//        return <th key={index}>{key.toUpperCase()}</th>\n//     })\n//   } catch(err){\n//     alert(err)\n//   }\n//  }\n//   renderLogistikList() {\n//       const { items,students } = this.state;\n//       console.log(students);\n//       // let renderTableHeader =()=>{\n//       //   let header = Object.keys(students[0])\n//       //   return header.map((key,index)=>{\n//       //   return <th key={index}>{key.toUpperCase()}</th>\n//       //   }) \n//       // }\n//     return (\n//       <div className=\"cardTable\">\n//         <table className=\"table table-striped\">\n//           <thead className=\"border-top-0\">\n//             <tr>\n//            <this.renderTableHeader />\n//             </tr>\n//           </thead>\n//           <tbody>\n//           </tbody>\n//         </table>\n//       </div>\n//     );\n//   }\n//   render(){\n//   return (\n//     <Container fluid>\n//     <div className=\"dataLogistik\">\n//       <h1 className=\"dataTitle\">Data Pegawai</h1>\n//       <nav aria-label=\"breadcrumb\">\n//         <ol className=\"breadcrumb\">\n//           <li className=\"breadcrumb-item\">\n//             <Link to=\"/\">Dashboard</Link>\n//           </li>\n//           <li className=\"breadcrumb-item active\" aria-current=\"page\">\n//             Data Pegawai\n//           </li>\n//         </ol>\n//       </nav>\n//       <Row>\n//         <Col className=\"col-md-6\">\n//           <form action=\"#\" method=\"post\">\n//             <input\n//               type=\"text\"\n//               className=\"form-control search\"\n//               placeholder=\"Cari...\"\n//             />\n//             <img src={icoSearch} alt=\"search\" className=\"icoSearch\" />\n//           </form>\n//         </Col>\n//         <Col className=\"col-md-6\">\n//           <Link to=\"/AddDataLogistik\">\n//             <a href=\"\" className=\"btn btn-custom1\">\n//               Tambah Data\n//             </a>\n//           </Link>\n//         </Col>\n//       </Row>\n//       {/* <this.renderTableHeader /> */}\n//       {/* {items && this.renderLogistikList()} */}\n//     </div>\n//   </Container>\n//   );\n// }","map":{"version":3,"sources":["/home/derry/github/sikat-design/src/component/tabel.jsx"],"names":["React","useState","useEffect","Link","useParams","withRouter","Col","Container","Row","axios","Tabel","Component","constructor","props","state","students","id","name","age","email","items","componentWillMount","getList","url","response","get","setState","data","console","log","err","alert","renderTableData","map","student","index","renderTableHeader","header","Object","keys","key","toUpperCase","render","Halaman"],"mappings":"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;AAAA;AAAA;AAAA,oBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKN,iBAAL,EAAL,CADH,EAEI,KAAKJ,eAAL,EAFJ,CADH,CAFH,CADF;AAWA;;AAlEiD;;AAsEnD,SAASW,OAAT,GAAmB;AACjB,MAAI3B,EAAE,GAAGZ,SAAS,EAAlB;AACA,SAAOY,EAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport icoEdit from \"./img/icon/IcoEdit.svg\";\nimport icoDelete from \"./img/icon/IcoDelete.svg\";\nimport icoSearch from \"./img/icon/IcoSearch.svg\";\nimport {  Link, useParams, withRouter } from \"react-router-dom\";\nimport {Col,Container,Row} from \"react-bootstrap\";\nimport axios from \"axios\";\n// import { data } from \"jquery\";\n\nexport default class Tabel extends React.Component {\n  constructor(props) {\n    super(props) //since we are extending class Table so we have to use super in order to override Component class constructor\n    this.state = { \n       students: [\n          { id: 1, name: 'Wasif', age: 21, email: 'wasif@email.com' },\n          { id: 2, name: 'Ali', age: 19, email: 'ali@email.com' },\n          { id: 3, name: 'Saad', age: 16, email: 'saad@email.com' },\n          { id: 4, name: 'Asad', age: 25, email: 'asad@email.com' }\n       ],\n       items :[],\n    }\n }\n\n     componentWillMount() {\n      this.getList();\n    }\n  \n     async getList() {\n      try{\n      const url = \"https://jsonplaceholder.typicode.com/todos\";\n      const response = await axios.get(url);\n      this.setState(   {\n        items: response.data,\n      },\n      () => {\n        console.log(this.state.items);\n      }\n    );\n    }catch(err){\n      alert(err);\n      console.log (\"Error In :\",err);\n    }\n  }\n  \n renderTableData() {\n  return this.state.students.map((student, index) => {\n     const { id, name, age, email } = student //destructuring\n     return (\n        <tr key={id}>\n           <td>{id}</td>\n           <td>{name}</td>\n           <td>{age}</td>\n           <td>{email}</td>\n        </tr>\n     )\n  })\n}\nrenderTableHeader() {\n  let header = Object.keys(this.state.students[0])\n  return header.map((key, index) => {\n     return <th key={index}>{key.toUpperCase()}</th>\n  })\n}\n render() { //Whenever our class runs, render method will be called automatically, it may have already defined in the constructor behind the scene.\n  return (\n    <div>\n       <h1 id='title'>React Dynamic Table</h1>\n       <table id='students'>\n          <tbody>\n             <tr>{this.renderTableHeader()}</tr>\n             {this.renderTableData()}\n          </tbody>\n       </table>\n    </div>\n )\n }\n}\n\n\nfunction Halaman (){\n  let id = useParams();\n  return id;\n}\n\n//   <Link to=\"/EditDataLogistik\">\n//   <a href=\"#\" className=\"btn btn-warning edit\">\n//     <img src={icoEdit} alt=\"edit\" className=\"icoOption\" />\n//   </a>\n// </Link>\n// <a href=\"#\" className=\"btn btn-danger delete\">\n//   <img src={icoDelete} alt=\"delete\" className=\"icoOption\" />\n// </a>\n\n//constructor(props) {\n  //     super(props)\n  //     this.state = {\n  //       items: [],\n  //       students: [\n  //         { id: 1, name: 'Wasif', age: 21, email: 'wasif@email.com' },\n  //         { id: 2, name: 'Ali', age: 19, email: 'ali@email.com' },\n  //         { id: 3, name: 'Saad', age: 16, email: 'saad@email.com' },\n  //         { id: 4, name: 'Asad', age: 25, email: 'asad@email.com' }\n  //      ],\n  //     };\n  //   }\n  \n  //   componentWillMount() {\n  //     this.getList();\n  //   }\n  \n  //    async getList() {\n  //     try{\n  //     const url = \"https://jsonplaceholder.typicode.com/todos\";\n  //     const response = await axios.get(url);\n  //     this.setState(   {\n  //       items: response.data,\n  //     },\n  //     () => {\n  //       console.log(this.state.items);\n  //     }\n  //   );\n  //   }catch(err){\n  //     alert(err);\n  //     console.log (\"Error In :\",err);\n  //   }\n  // }\n  \n  // async renderTableHeader() {\n  //   const { items,students } = this.state;\n  //    try{\n  \n  //     let header = Object.keys(students[0])\n  //     return header.map((key, index) => {\n  //        return <th key={index}>{key.toUpperCase()}</th>\n  //     })\n  //   } catch(err){\n  //     alert(err)\n  //   }\n  //  }\n  \n  //   renderLogistikList() {\n  //       const { items,students } = this.state;\n  //       console.log(students);\n  //       // let renderTableHeader =()=>{\n  //       //   let header = Object.keys(students[0])\n  //       //   return header.map((key,index)=>{\n  //       //   return <th key={index}>{key.toUpperCase()}</th>\n  //       //   }) \n  //       // }\n  //     return (\n  //       <div className=\"cardTable\">\n  //         <table className=\"table table-striped\">\n  //           <thead className=\"border-top-0\">\n  //             <tr>\n  //            <this.renderTableHeader />\n  //             </tr>\n  //           </thead>\n  //           <tbody>\n  \n  //           </tbody>\n  //         </table>\n  //       </div>\n  //     );\n  //   }\n  \n  //   render(){\n      \n  //   return (\n  //     <Container fluid>\n  //     <div className=\"dataLogistik\">\n  //       <h1 className=\"dataTitle\">Data Pegawai</h1>\n  //       <nav aria-label=\"breadcrumb\">\n  //         <ol className=\"breadcrumb\">\n  //           <li className=\"breadcrumb-item\">\n  //             <Link to=\"/\">Dashboard</Link>\n  //           </li>\n  //           <li className=\"breadcrumb-item active\" aria-current=\"page\">\n  //             Data Pegawai\n  //           </li>\n  //         </ol>\n  //       </nav>\n  //       <Row>\n  //         <Col className=\"col-md-6\">\n  //           <form action=\"#\" method=\"post\">\n  //             <input\n  //               type=\"text\"\n  //               className=\"form-control search\"\n  //               placeholder=\"Cari...\"\n  //             />\n  //             <img src={icoSearch} alt=\"search\" className=\"icoSearch\" />\n  //           </form>\n  //         </Col>\n  //         <Col className=\"col-md-6\">\n  //           <Link to=\"/AddDataLogistik\">\n  //             <a href=\"\" className=\"btn btn-custom1\">\n  //               Tambah Data\n  //             </a>\n  //           </Link>\n  //         </Col>\n  //       </Row>\n  //       {/* <this.renderTableHeader /> */}\n  //       {/* {items && this.renderLogistikList()} */}\n  //     </div>\n  //   </Container>\n  //   );\n  // }"]},"metadata":{},"sourceType":"module"}