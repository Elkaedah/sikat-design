{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\owner\\\\OneDrive\\\\Dokumen\\\\GitHub\\\\sikat-design\\\\src\\\\component\\\\chart.jsx\";\nimport React from \"react\";\nimport \"./style/index.scss\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Line } from 'react-chartjs-2';\nimport { data } from \"jquery\";\ndata = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n  datasets: [{\n    label: \"My First dataset\",\n    backgroundColor: \"rgb(255, 99, 132)\",\n    borderColor: \"rgb(255, 99, 132)\",\n    data: [0, 10, 5, 2, 20, 30, 45]\n  }],\n  maintainAspectRatio: false\n};\nchartOptions = {\n  scales: {\n    xAxes: [{\n      ticks: {\n        callback: function (label, index, labels) {\n          return label.toFixed(2) + \"%\";\n        }\n      }\n    }],\n    yAxes: [{\n      ticks: {\n        callback: function (label, index, labels) {\n          return label;\n        },\n        fontSize: 18,\n        fontColor: \"black\"\n      },\n      display: true\n    }]\n  }\n};\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartReference = React.createRef();\n  }\n\n  componentDidMount() {\n    console.log(this.chartReference); // returns a Chart.js instance reference\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"col-md-9 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"judul\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, \"Grafik Rekapitulasi Bencana\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, \"3 Bulan\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, \"3 Bulan\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, \"3 Bulan\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, \"3 Bulan\")), /*#__PURE__*/React.createElement(Line, {\n      data: data,\n      options: chartOptions,\n      height: 500,\n      width: 700,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["C:/Users/owner/OneDrive/Dokumen/GitHub/sikat-design/src/component/chart.jsx"],"names":["React","Container","Row","Col","Line","data","labels","datasets","label","backgroundColor","borderColor","maintainAspectRatio","chartOptions","scales","xAxes","ticks","callback","index","toFixed","yAxes","fontSize","fontColor","display","Chart","Component","constructor","props","chartReference","createRef","componentDidMount","console","log","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./style/index.scss\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport {Line} from 'react-chartjs-2';\r\nimport { data } from \"jquery\";\r\n\r\ndata = {\r\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n  datasets: [\r\n    {\r\n      label: \"My First dataset\",\r\n      backgroundColor: \"rgb(255, 99, 132)\",\r\n      borderColor: \"rgb(255, 99, 132)\",\r\n      data: [0, 10, 5, 2, 20, 30, 45],\r\n    },\r\n  ],\r\n  maintainAspectRatio: false\r\n};\r\n\r\nchartOptions = {\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        ticks: {\r\n          callback: function (label, index, labels) {\r\n            return label.toFixed(2) + \"%\";\r\n          },\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          callback: function (label, index, labels) {\r\n            return label;\r\n          },\r\n          fontSize: 18,\r\n          fontColor: \"black\",\r\n        },\r\n        display: true,\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nclass Chart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.chartReference = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    console.log(this.chartReference); // returns a Chart.js instance reference\r\n  }\r\n  render() {\r\n    return (\r\n      <Container className=\"container-fluid\">\r\n        <Row className=\"chart\">\r\n          <Col className=\"col-md-9 \">\r\n            <div className=\"judul\">Grafik Rekapitulasi Bencana</div>\r\n            <div className=\"select\">\r\n              <a href=\"\">3 Bulan</a>\r\n              <a href=\"\">3 Bulan</a>\r\n              <a href=\"\">3 Bulan</a>\r\n              <a href=\"\">3 Bulan</a>\r\n            </div>\r\n            <Line\r\n              data={data}\r\n              options={chartOptions}\r\n              height={500}\r\n              width={700}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}